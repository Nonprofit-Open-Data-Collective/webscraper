create_table_01(sample.urls$ORGURL[1])
create_table_01(sample.urls$ORGURL[2])
save <- create_table_01(sample.urls$ORGURL[2])
View(sample.urls)
View(save)
roxygen2::roxygenize()
library(webscraper)
library(roxygen2)
roxygenize()
library(webscraper)
load_test_urls()
table <- create_root_url(sample.urls$ORGURL[1])
table
table <- create_table_01(sample.urls$ORGURL[1])
table <- create_table_01(sample.urls$ORGURL[2])
View(table)
getNodes(table[["normalized_URL"]])
x <- getNodes(table[["normalized_URL"]])
table <- create_table_01(sample.urls$ORGURL[3])
x <- getNodes(table[["normalized_URL"]])
html_page <- xml2::read_html( table[["normalized_URL"]] )
table[["normalized_URL"]]
library(xml2)
what <- read_html("http://mainelymushrooms.org")
View(what)
xml_child(what, 2)
what %>%  # read in the site as an HTML file
rvest::html_nodes( "a" ) %>% # return all nodes with links in them
rvest::html_attr( "href" )
done <- what %>%  # read in the site as an HTML file
rvest::html_nodes( "a" ) %>% # return all nodes with links in them
rvest::html_attr( "href" )
?webscraper
??webscraper
check_url_status(sample.urls$ORGURL)
check_url_status(sample.urls$ORGURL[1])
check_url_status2(sample.urls$ORGURL[1])
check_url_status2(sample.urls$ORGURL)
create_table_01(sample.urls$ORGURL)
create_table_01(sample.urls$ORGURL[1])
View(table)
View(what)
done
library(readr)
data <- read_csv("~/Desktop/report1656697230210.csv")
View(data)
table(data$`Is Initial Assessment`)
library(tidyverse)
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1)
View(data)
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1) %>%
count(`Organization Name`)
View(data)
c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK",)
# Functions
`%notin%` <- Negate(`%in%`)
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US")) %>%
count(`Organization Name`)
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US")) %>%
count(`Organization Name`)
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"))
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household")) %>%
count(`Organization Name`)
View(data)
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"))
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`))
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE)
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE) %>%
count(`Organization Name`)
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE)
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE,
`WWC ID` %in% c("DM1", "PA1", "LC1"))
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE)
table(data$`WWC ID`)
`WWC ID` %in% c("DM1", "PA1", "GM1"))
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE,
`WWC ID` %in% c("DM1", "PA1", "GM1"))
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE,
`WWC ID` %in% c("DM1", "PA1", "GM1")) %>%
mutate(Response = ifelse(Response=="Yes", 1, 0),
`Review Decision` = ifelse(`Review Decision`=="Yes", 1, 0))
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE,
`WWC ID` %in% c("DM1", "PA1", "GM1")) %>%
mutate(Response = ifelse(Response=="Yes", 1, 0),
`Review Decision` = ifelse(`Review Decision`=="Yes", 1, 0),
Diff = `Review Decision` - Review)
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE,
`WWC ID` %in% c("DM1", "PA1", "GM1")) %>%
mutate(Response = ifelse(Response=="Yes", 1, 0),
`Review Decision` = ifelse(`Review Decision`=="Yes", 1, 0),
Diff = `Review Decision` - Review)
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE,
`WWC ID` %in% c("DM1", "PA1", "GM1")) %>%
mutate(Response = ifelse(Response=="Yes", 1, 0),
`Review Decision` = ifelse(`Review Decision`=="Yes", 1, 0),
Diff = `Review Decision` - Response)
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE,
`WWC ID` %in% c("DM1", "PA1", "GM1")) %>%
mutate(Response = ifelse(Response=="Yes", 1, 0),
`Review Decision` = ifelse(`Review Decision`=="Yes", 1, 0),
Diff = `Review Decision` - Response) %>%
group_by(`WWC ID`) %>%
summarize(mean = mean(Diff))
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE,
`WWC ID` %in% c("DM1", "PA1", "GM1")) %>%
mutate(Response = ifelse(Response=="Yes", 1, 0),
`Review Decision` = ifelse(`Review Decision`=="Yes", 1, 0),
Diff = `Review Decision` - Response)
group_by(`WWC ID`) %>%
summarize(mean = mean(Diff))
group_by(`WWC ID`) %>%
summarize(mean = mean(Diff))
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE,
`WWC ID` %in% c("DG2", "PA1", "GM1")) %>%
mutate(Response = ifelse(Response=="Yes", 1, 0),
`Review Decision` = ifelse(`Review Decision`=="Yes", 1, 0),
Diff = `Review Decision` - Response) %>%
group_by(`WWC ID`) %>%
summarize(mean = mean(Diff))
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE,
`WWC ID` %in% c("DG2", "PA1", "GM1")) %>%
mutate(Response = ifelse(Response=="Yes", 1, 0),
`Review Decision` = ifelse(`Review Decision`=="Yes", 1, 0),
Diff = `Review Decision` - Response) %>%
group_by(`WWC ID`) %>%
count(Diff)
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE,
`WWC ID` %in% c("DG2", "PA1", "GM1")) %>%
mutate(Response = ifelse(Response=="Yes", 1, 0),
`Review Decision` = ifelse(`Review Decision`=="Yes", 1, 0),
Diff = `Review Decision` - Response) %>%
group_by(`WWC ID`) %>%
count(Diff) %>%
pivot_wider(names_from = Diff, values_from = n)
data <- read_csv("~/Desktop/report1656697230210.csv") %>%
filter(`Is Initial Assessment` == 1,
`Organization Name` %notin% c("_TestProvidencia, Chile", ",", ", , Brasil", ", Argentina", ", Trinidad and Tobago", "Fake Keith City", "Fakefergusonville, MT", "Results for America", "Results for America,", "RIL", "Test City, NY", "Test Village,", "Test Washington, DC", "test, DC", "Testing Registration, AK", "TestingPorto, CA", "testville, , Brasil", "Todd Household", "Tres de Febrero", "What Works Cities, Outside of US", "Certification City", "Dickens Household"),
is.na(`Review Decision`)==FALSE,
`WWC ID` %in% c("DG2", "PA1", "GM1")) %>%
mutate(Response = ifelse(Response=="Yes", 1, 0),
`Review Decision` = ifelse(`Review Decision`=="Yes", 1, 0),
Diff = `Review Decision` - Response) %>%
group_by(`WWC ID`) %>%
count(Diff) %>%
pivot_wider(names_from = Diff, values_from = n, values_fill = 0)
22/78
# Libraries
library(readxl)
library(tidyverse)
library(showtext)
# Aes
showtext_auto()
# Data
Data <- read_xlsx("~/Desktop/City Response/CitiesUsCaLa.xlsx")
View(Data)
# Data
Data <- read_xlsx("~/Desktop/City Response/CitiesUsCaLa.xlsx") %>%
filter(`Already Certified?`==FALSE)
# Data
Data <- read_xlsx("~/Desktop/City Response/CitiesUsCaLa.xlsx")
# Data
Data <- read_xlsx("~/Desktop/City Response/CitiesUsCaLa.xlsx") %>%
filter(`Already Certified?`== "Np")
# Data
Data <- read_xlsx("~/Desktop/City Response/CitiesUsCaLa.xlsx") %>%
filter(`Already Certified?`== "No")
# Data
Data <- read_xlsx("~/Desktop/City Response/CitiesUsCaLa.xlsx") %>%
filter(`Already Certified?`== "No") %>%
select(Region, City, TOTAL, Predicted)
# Data
Data <- read_xlsx("~/Desktop/City Response/CitiesUsCaLa.xlsx") %>%
filter(`Already Certified?`== "No") %>%
select(Region, City, TOTAL, Predicted) %>%
mutate(Predicted = ifelse(Predicted < 0, 0, Predicted))
library(webscraper)
load_test_urls()
check_url_status(sample.urls$1)
check_url_status(sample.urls$ORGURL[5])
check_url_status(sample.urls$ORGURL[3])
check_url_status2(sample.urls$ORGURL[3])
check_url_status2(sample.urls$ORGURL[5])
check_url_status2(sample.urls$ORGURL)
for(i in sample.urls$ORGURL){}
for(i in sample.urls$ORGURL){check_url_status2(i)}
print(check_url_status2(sample.urls$ORGURL))
print(check_url_status2(i))
for(i in sample.urls$ORGURL){print(check_url_status2(i))}
View(sample.urls)
normalize_url(sample.urls$ORGURL[1])
create_root_url("http://gmfd.org/gmfra/gmfraindex.htm")
create_table_01("westelm.com")
normalized_URL <- normalize_url( "westelm.com" )
http_status_code <- httr::GET( normalized_URL )$all_headers[[1]]$status
is_redirected <- as.integer( http_status_code/100 ) == 3
redirected_URL <- ifelse( is_redirected, get_redirected_url( normalized_URL ), NA )
get_redirected_url( normalized_URL )
httr::GET( "WWW.MAINEWELFAREDIRECTORS.ORG
" )$all_headers[[1]]$status
httr::GET( "WWW.MAINEWELFAREDIRECTORS.ORG" )$all_headers[[1]]$status
get_redirected_url( WWW.MAINEWELFAREDIRECTORS.ORG" )
get_redirected_url( "WWW.MAINEWELFAREDIRECTORS.ORG" )
create_root_url(get_redirected_url( normalized_URL ))
create_root_url("http://mainewelfaredirectors.org")
create_table_01 <- function( input.URL ){
result <- data.frame()
original_URL <- input.URL
normalized_URL <- normalize_url( input.URL )
http_status_code <- httr::GET( normalized_URL )$all_headers[[1]]$status
is_redirected <- as.integer( http_status_code/100 ) == 3
redirected_URL <- ifelse( is_redirected, get_redirected_url( normalized_URL ), NA )
root_URL <- create_root_url( normalized_URL )
active_URL <- NA
url_version <- NA
domain_status <- NA
if( check_url_status2( original_URL ) == "VALID" ){
active_URL <- original_URL
url_version <- "original"
domain_status <- check_url_status2( original_URL )
} else if( check_url_status2( normalized_URL ) == "VALID" ){
active_URL <- normalized_URL
url_version <- "normalized"
domain_status <- check_url_status2( normalized_URL )
} else if( is_redirected ){
if( check_url_status2( redirected_URL ) == "VALID" ){
active_URL <- redirected_URL
url_version <- "redirect"
domain_status <- check_url_status2( redirected_URL )
}
} else{
if( check_url_status2( root_URL ) == "VALID" ){
active_URL <- root_URL
url_version <- "root"
domain_status <- check_url_status2( root_URL )
}
result$org_id <- sample.urls$EIN[sample.urls$ORGURL == original_URL]
result$org_name <- sample.urls$ORGNAME[sample.urls$ORGURL == original_URL]
result$original_URL <- original_URL
result$normalized_URL <- normalized_URL
result$redirected_URL <- redirected_URL
result$root_URL <- root_URL
result$active_URL <- active_URL
result$url_version <- url_version
result$domain_status <- domain_status
return( result )
}
create_table_01(sample.urls$ORGURL[2])
rm(normalized_URL)
create_table_01(sample.urls$ORGURL[2])
original_URL <- sample.urls$ORGURL[2]
result <- data.frame()
normalized_URL <- normalize_url( input.URL )
input.URL <- sample.urls$ORGURL[2]
original_URL <- input.URL
normalized_URL <- normalize_url( input.URL )
http_status_code <- httr::GET( normalized_URL )$all_headers[[1]]$status
is_redirected <- as.integer( http_status_code/100 ) == 3
redirected_URL <- ifelse( is_redirected, get_redirected_url( normalized_URL ), NA )
root_URL <- create_root_url( normalized_URL )
active_URL <- NA
url_version <- NA
domain_status <- NA
if( check_url_status2( original_URL ) == "VALID" ){
active_URL <- original_URL
url_version <- "original"
domain_status <- check_url_status2( original_URL )
} else if( check_url_status2( normalized_URL ) == "VALID" ){
active_URL <- normalized_URL
url_version <- "normalized"
domain_status <- check_url_status2( normalized_URL )
} else if( is_redirected ){
if( check_url_status2( redirected_URL ) == "VALID" ){
active_URL <- redirected_URL
url_version <- "redirect"
domain_status <- check_url_status2( redirected_URL )
}
} else{
if( check_url_status2( root_URL ) == "VALID" ){
active_URL <- root_URL
url_version <- "root"
domain_status <- check_url_status2( root_URL )
}
result$org_id <- sample.urls$EIN[sample.urls$ORGURL == original_URL]
create_table_01 <- function( input.URL ){
#result <- data.frame()
original_URL <- input.URL
normalized_URL <- normalize_url( input.URL )
http_status_code <- httr::GET( normalized_URL )$all_headers[[1]]$status
is_redirected <- as.integer( http_status_code/100 ) == 3
redirected_URL <- ifelse( is_redirected, get_redirected_url( normalized_URL ), NA )
root_URL <- create_root_url( normalized_URL )
active_URL <- NA
url_version <- NA
domain_status <- NA
if( check_url_status2( original_URL ) == "VALID" ){
active_URL <- original_URL
url_version <- "original"
domain_status <- check_url_status2( original_URL )
} else if( check_url_status2( normalized_URL ) == "VALID" ){
active_URL <- normalized_URL
url_version <- "normalized"
domain_status <- check_url_status2( normalized_URL )
} else if( is_redirected ){
if( check_url_status2( redirected_URL ) == "VALID" ){
active_URL <- redirected_URL
url_version <- "redirect"
domain_status <- check_url_status2( redirected_URL )
}
} else{
if( check_url_status2( root_URL ) == "VALID" ){
active_URL <- root_URL
url_version <- "root"
domain_status <- check_url_status2( root_URL )
}
result <- data.frame( org_id = sample.urls$EIN[sample.urls$ORGURL == original_URL],
org_name =  sample.urls$ORGNAME[sample.urls$ORGURL == original_URL],
original_URL,
normalized_URL,
redirected_URL,
root_URL,
active_URL,
url_version,
domain_status)
#result$org_id <- sample.urls$EIN[sample.urls$ORGURL == original_URL]
#result$org_name <- sample.urls$ORGNAME[sample.urls$ORGURL == original_URL]
#result$original_URL <- original_URL
#result$normalized_URL <- normalized_URL
#result$redirected_URL <- redirected_URL
#result$root_URL <- root_URL
#result$active_URL <- active_URL
#result$url_version <- url_version
#result$domain_status <- domain_status
return( result )
}
create_table_01(sample.urls$ORGURL[2])
save <- create_table_01(sample.urls$ORGURL[2])
View(save)
library(webscraper)
create_table <- function( input ){
if(length(input == 1)){
URL.frame <- create_table_01(input)
}
return(URL.frame)
}
load_test_urls()
one <- sample.urls$ORGURL[4]
create_table_01(one)
create_table(one)
two <- sample.urls$ORGURL[4:5]
create_table_01(two)
create_table <- function( input ){
if( length( input == 1 ) ){
URL.frame <- create_table_01( input )
}else{
URL.frame <- data.frame
for( i in 1:length( input ) ){
URL.table <- create_table_01( i )
URL.frame <- rbind( URL.frame, URL.table )
}
return(URL.frame)
}
create_table(two)
create_table <- function( input ){
if( length( input == 1 ) ){
URL.frame <- create_table_01( input )
}else{
URL.frame <- data.frame
for( i in 1:length( input ) ){
URL.table <- create_table_01( input[i] )
URL.frame <- rbind( URL.frame, URL.table )
}
return(URL.frame)
}
create_table(two)
input <- two
URL.frame <- data.frame
URL.frame <- data.frame()
for( i in 1:length( input ) ){
URL.table <- create_table_01( input[i] )
URL.frame <- rbind( URL.frame, URL.table )
}
create_table <- function( input ){
if( length( input == 1 ) ){
URL.frame <- create_table_01( input )
}else{
URL.frame <- data.frame()
for( i in 1:length( input ) ){
URL.table <- create_table_01( input[i] )
URL.frame <- rbind( URL.frame, URL.table )
}
return(URL.frame)
}
create_table(two)
URL.frame <- data.frame()
for( i in 1:length( input ) ){
URL.table <- create_table_01( input[i] )
URL.frame <- rbind( URL.frame, URL.table )
}
create_table <- function( input ){
if( length( input )== 1 ){
URL.frame <- create_table_01( input )
}else{
URL.frame <- data.frame()
for( i in 1:length( input ) ){
URL.table <- create_table_01( input[i] )
URL.frame <- rbind( URL.frame, URL.table )
}
return(URL.frame)
}
create_table(two)
create_table <- function( input ){
if( length( input ) < 1 ){
stop( "Must Input at Least 1 URL" )
}
if( length( input )== 1 ){
URL.frame <- create_table_01( input )
}else{
URL.frame <- data.frame()
for( i in 1:length( input ) ){
URL.table <- create_table_01( input[i] )
URL.frame <- rbind( URL.frame, URL.table )
}
return(URL.frame)
}
x <- Null
x <- NULL
length(x)
create_table(x)
create_table(one)
create_table(two)
xx <- create_table(two)
View(xx)
roxygen2::roxygenize()
library(webscraper)
load_test_urls()
one <- sample.urls$ORGURL[3]
two <- sample.urls$ORGURL[3:4]
five <- sample.urls$ORGURL[3:8]
five <- sample.urls$ORGURL[3:7]
table_one <- create_table(one)
table_two <- create_table(two)
table_five <- create_table(five)
roxygen2::roxygenize()
library(webscraper)
load_test_urls()
one <- sample.urls$ORGURL[5]
save <- create_table(one)
getNodes(save$normalized_URL[1])
nodes <- getNodes(save$normalized_URL[1])
xml2::read_html( save$normalized_URL[1] )
get_p_node_data(save$normalized_URL[1])
View(save)
